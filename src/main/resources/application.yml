spring:

### 데이터베이스 ###
  datasource:
    driver-class-name: org.h2.Driver
    username: sa
    password: sa
#    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1
    url: jdbc:h2:tcp://localhost/~/test
  h2:
    console:
      enabled: true
      path: /h2-console

### 파일  ###
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 105MB # 전체 요청(파일 + 데이터)의 최대 크기

### JPA 설정 ###
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    properties:
      hibernate:
#        format_sql: true
#        show_sql: true

  ### 메시징 - RabbitMQ
#  rabbitmq:
#    host: localhost             # RabbitMQ 서버 주소
#    port: 5672                  # RabbitMQ 서버 포트 (기본값: 5672)
#    username: guest             # RabbitMQ 로그인 ID (기본: guest)
#    password: guest             # RabbitMQ 로그인 비밀번호 (기본: guest)
#    virtual-host: /             # VirtualHost 설정 (기본: /)

### MyBatis ###
mybatis:
  mapper-locations: classpath:mybatis/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true # 테이블 컬럼 명이랑 DTO 필드명이랑 다를경우


### JWT Token ###
jwt:
  secret: skcc-secret-key-skcc-secret-key-skcc-secret-key # 최소 32바이트 이상만 권장됨
  expiration: 1800000 # 30분

### 로깅 설정
logging:
  level:
    root: info # 전체 로그 레벨
    skcc.arch: debug # 특정 패키지 레벨
    springframework:
      boot:
        autoconfigure: debug

  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread][%highlight(%-5level)]%X{traceId}%X{depth} %msg%n" # 콘솔 로그 패턴
# 로그 파일 관리
#    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread][%highlight(%-5level)]%X{traceId}%X{depth} %msg%n" # 콘솔 로그 패턴
#  file:
#    name: logs/app.log # 파일 로그 경로 지정
#  logback:
#    rollingpolicy:
#      file-name-pattern: ${LOG_FILE}.%d{yyyy-MM-dd}.%i.gz
#      max-file-size: 10MB

### JPA 로깅 라이브러리 (p6spy)
decorator:
  datasource:
    p6spy:
      enable-logging: true


### 캐시 저장소 (기본:caffeine)
my:
  cache:
    type: caffeine

